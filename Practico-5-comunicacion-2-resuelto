Ejercicio 1

#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>
#include <sys/wait.h>
#define TAM 20

int main(int argc, char *argv[]) {
    int filea = open("a-inout", O_CREAT | O_WRONLY, 0644);
    int fileb = open("b-inout", O_CREAT | O_WRONLY, 0644);
    int STATUS, n = 0;
    time_t tInicial;
    char tTime[TAM], buff[TAM];

    int hijoA = fork();
    if (hijoA == 0) {
        tInicial = time(0);
        strcpy(tTime, ctime(&tInicial));
        printf("%s", tTime);
        filea = open("a-inout", O_RDONLY);
        fileb = open("b-inout", O_WRONLY);
        if (filea < 0) {
            printf("Error al abrir 'a-inout'\n");
        }
        if (fileb < 0) {
            printf("Error al abrir 'b-inout'\n");
        }
        n = write(fileb, tTime, strlen(tTime));
        printf("Se ha escrito: '%d' en el archivo 'b-inout'\n", n);
        close(filea);
        close(fileb);
        exit(0);

    } else {
        wait(&STATUS);
        if (WIFEXITED(STATUS)) {
            printf("El hijo A terminó con el estado: %d\n", WEXITSTATUS(STATUS));
        } else if (WIFSIGNALED(STATUS)) {
            printf("El hijo A fue terminado por la señal: %d\n", WTERMSIG(STATUS));
        }

        int hijoB = fork();
        if (hijoB == 0) {
            fileb = open("b-inout", O_RDONLY);
            filea = open("a-inout", O_WRONLY);
            if (filea < 0) {
                printf("Error al abrir 'a-inout'\n");
            }
            if (fileb < 0) {
                printf("Error al abrir 'b-inout'\n");
            }
            int m = read(fileb, buff, TAM);
            printf("Se ha leido: '%d' en el archivo 'b-inout'\n", m);
            printf("HORA ACTUAL: %s\n", buff);
            close(filea);
            close(fileb);
            exit(0);
        } else {
            wait(&STATUS);
            if (WIFEXITED(STATUS)) {
                printf("El hijo B terminó con el estado: %d\n", WEXITSTATUS(STATUS));
            } else if (WIFSIGNALED(STATUS)) {
                printf("El hijo B fue terminado por la señal: %d\n", WTERMSIG(STATUS));
            }
        }
    }

    close(filea);
    close(fileb);
    return 0;
}

// Se escriben 25 caracteres (24 para la fecha y hora + 1 para la nueva línea).


Ejercicio 2

#include <stdio.h>
#include <fcntl.h>
#include <time.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <stdlib.h>
#include <sys/stat.h>

#define TAM 50

int main(){
    char buffer[TAM];
    int status;
    pid_t pid1, pid2;
    time_t ltime;
    int pm[2];
    pipe(pm);
    pid1 = fork();
    if (pid1==0){
        char m[TAM];
        time(&ltime); 
        strcpy(m, ctime(&ltime)); //Metemos la fecha y hora en m
        write(pm[1], m, TAM); //Escribimos en el pm el mensaje
        exit(1);    
    } else {  
        pid2 = fork();
        if(pid2==0){
            read( pm[0], buffer, TAM); //leemos el pm
            printf("%s", buffer); //escribimos la fecha y hora
        }
        else {
            sleep(1);
        }
    }
    return 0;
}
